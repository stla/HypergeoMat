// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rcpp_hypergeomPFQ
double Rcpp_hypergeomPFQ(int m, NumericVector a, NumericVector b, NumericVector x, double alpha);
RcppExport SEXP _HypergeoMat_Rcpp_hypergeomPFQ(SEXP mSEXP, SEXP aSEXP, SEXP bSEXP, SEXP xSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_hypergeomPFQ(m, a, b, x, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HypergeoMat_Rcpp_hypergeomPFQ", (DL_FUNC) &_HypergeoMat_Rcpp_hypergeomPFQ, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_HypergeoMat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
